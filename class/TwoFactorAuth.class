class TwoFactorAuth
{
    private static base32_encode(d)
    {
        var t;
        var b;
        var r;
        list(t, b, r) = array("ABCDEFGHIJKLMNOPQRSTUVWXYZ234567", "", "");

        foreach(str_split(d) as c)
            b = b . sprintf("%08b", ord(c));

        foreach(str_split(b, 5) as c)
            r = r . t[bindec(c)];

        return r;
    }

    public static generateToken(clock)
    {
        var secretKey = file_get_contents( "secretKey.txt" );
        var moving_factor = floor(clock / 30);

        var b = [];
        while (moving_factor > 0) {
            b[] = chr(moving_factor & 0xff);
            moving_factor >>= 8;
        }
        var text = str_pad(implode('', array_reverse(b)), 8, "\0", STR_PAD_LEFT);

        var hash = hash_hmac("sha1", text, secretKey, true);
        var offset = ord(hash[19]) & 0xf;
        var token_base = (ord(hash[offset]) & 0x7f) << 24
            | (ord(hash[offset + 1]) & 0xff) << 16
            | (ord(hash[offset + 2]) & 0xff) << 8
            | (ord(hash[offset + 3]) & 0xff);

        var token = token_base % pow(10, 6);

        return str_pad(token, 6, 0, STR_PAD_LEFT);
    }
    public static isValid(token)
    {
        echo token . "<br>";
        var clock = time();
        foreach ([0, -1, 1] as index) {
            var a = TwoFactorAuth::generateToken(clock + index * 30);
            echo a . "<br>";
            if ( token === TwoFactorAuth::generateToken(clock + index * 30)) {
                return true;
            }
        }
        return false;
    }
    public static generate()
    {
        var secretKey = substr(base_convert(hash('sha256', uniqid()), 16, 36), 0, 20);
        var otpauth = "otpauth://totp/sazanami?secret=".TwoFactorAuth::base32_encode( secretKey );
       
        var qr = file_get_contents(     
            "https://chart.googleapis.com/chart?chs=200x200&cht=qr&chl=" . urlencode(otpauth)
        );

        file_put_contents( "secretKey.txt", secretKey );

        return "<img src='data:image/png;base64," . base64_encode(qr) . "' />";
    }
}